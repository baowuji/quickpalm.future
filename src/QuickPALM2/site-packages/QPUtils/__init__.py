import os, sys
# My libs
import settings, dialogs

import QuickPALM2.plugins.ParticleDetection
import QuickPALM2.plugins.DriftCorrection
import QuickPALM2.plugins.DataRendering

def getPath():
    """
    Returns the QuickPALM root path
    
    @rtype: str
    """
    path = os.path.split(__file__)[0] # down to QuickPALM2/QPUtils
    path = os.path.split(path)[0] # down to QuickPALM2
    return path

def getPlugins(type = 'ParticleDetection'):
    """
    Returns a dictionary of plugins.
    
    @param type: either 'ParticleDetection', 'DriftCorrection' or 'DataRendering'
    @type type: str
    @return: {plugin_name: plugin_class, ...}
    @rtype: dict
    """
    plugins = {}
    parent = getattr(QuickPALM2.plugins, type)
    for p in dir(parent):
        obj = getattr(parent, p)
        # in the future somehow I need to discover if it implements the ParticleDetectionPlugIn
        if "label" in dir(obj):
            name = str(obj.label)
            plugins[name] = obj
    return plugins
