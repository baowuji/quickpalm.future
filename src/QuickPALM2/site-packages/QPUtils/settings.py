import ij

class SettingsManager:
    """
    Allows for easy creation of dialogs and management of the input given by the user.
    """
    
    ij_prefs = None
    _prefix = None
    _values = {}
            
    def __init__(self, prefs_prefix = ""):
        """
        Class initializer.
        
        @param prefs_prefix: prefix to be used when saving settings, for example if prefix is 'QuickPALM' 
        then every key will be saved in ImageJ preferences manager as 'QuickPALM.*'
        @type prefs_prefix: str
        @rtype: L{SettingsManager}
        """
        self.ij_prefs = ij.Prefs()
        self._prefix = prefs_prefix

    def has_key(self, value):
        return self._values.has_key(value)

    def __getitem__(self, key):
        if self._values.has_key(key): return self._values[key]
        v = self.ij_prefs.get("%s.%s" % (self._prefix, key), None)
        if v == None: raise ValueError, "key not found"
        return v
    
    def __setitem__(self, key, value):
        self.ij_prefs.set("%s.%s" % (self._prefix, key), value)
        self._values[key] = value
    
    def __detitem__(self, key):
        del self._values["%s.%s" % (self._prefix, key)]
        

